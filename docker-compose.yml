services:

  api:
    container_name: asao_api
    build: ./
    depends_on:
      db:
        condition: service_healthy
    command: /bin/sh -c 'cd src && python main.py' #python ./src/main.py #bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; python ./src/main.py>'
    volumes:
      - ./src:/app/src
    ports:
      - 1252:8000
    restart: always
    networks:
      - asao_network
    env_file:
      - .env

  db:
    container_name: asao_postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - .postgres:/var/lib/postgresql/data
      - ./init.sh:/docker-entrypoint-initdb.d/init.sh
      - ./src/database/dump.sql:/docker-entrypoint-initdb.d/init.sql
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    restart: always
    healthcheck :
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      interval : 5s
      timeout : 5s
      retries : 5
    networks:
      - asao_network
    env_file:
      - .env

networks:
  asao_network:
    driver: bridge